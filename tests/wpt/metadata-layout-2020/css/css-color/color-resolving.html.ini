[color-resolving.html]
  [Should not parse invalid keyword: current-Color]
    expected: FAIL

  [The rgb function requires 3 or 4 arguments: rgb(0)]
    expected: FAIL

  [Values must be all numbers or all percentages: rgb(255, 50%, 0%)]
    expected: FAIL

  [Comma optional syntax requires no commas at all: rgb(0, 0 0)]
    expected: FAIL

  [Percent alpha values are accepted in hsl/hsla: hsla(0, 0%, 0%, 50%)]
    expected: FAIL

  [Capitalization should not affect parsing: RGB(153, 204, 255)]
    expected: FAIL

  [Capitalization should not affect parsing: RGBA(100%, 100%, 100%, 0)]
    expected: FAIL

  [Valid numbers should be parsed: hsl(60, 100%, 37.5%)]
    expected: FAIL

  [Invalid alpha values should be clamped to 0 and 1 respectively: rgba(0%, 20%, 100%, 37)]
    expected: FAIL

  [The hsl function requires 3 or 4 arguments: hsl()]
    expected: FAIL

  [The first parameter of hsl/hsla must be a number or angle: hsla(50%, 50%, 0%, 1)]
    expected: FAIL

  [Comments should not affect parsing: rgb(/* R */ 10%, /* G */ 20%, /* B */ 30%)]
    expected: FAIL

  [Should parse to completely transparent: TransParent]
    expected: FAIL

  [Valid 3-digit hex: #fff]
    expected: FAIL

  [Should parse as correct value: fuchsia]
    expected: FAIL

  [Capitalization should not affect parsing: rgB(10%, 20%, 30%)]
    expected: FAIL

  [Comma optional syntax requires no commas at all: hsla(0, 0% 0%, 1)]
    expected: FAIL

  [RGB and RGBA are synonyms: rgb(0%, 0%, 0%, 0%)]
    expected: FAIL

  [Valid numbers should be parsed: rgba(0, 51, 255, 0)]
    expected: FAIL

  [Capitalization should not affect parsing: HSL(0, 0%, 0%)]
    expected: FAIL

  [Invalid values should be clamped to 0 and 255 respectively: rgb(-12%, 110%, 1400%)]
    expected: FAIL

  [Percent alpha values are accepted in rgb/rgba: rgba(0%, 0%, 0%, 0%)]
    expected: FAIL

  [The first parameter of hsl/hsla must be a number or angle: hsl(50%, 50%, 0%)]
    expected: FAIL

  [Invalid alpha values should be clamped to 0 and 1 respectively: rgba(0, 51, 255, -0.1)]
    expected: FAIL

  [Should not parse invalid hex: #fffffg]
    expected: FAIL

  [Valid percentages should be parsed: rgba(42%, 3%, 50%, 0.3)]
    expected: FAIL

  [Keywords are not accepted in the hsl function: hsl(0, 0%, light)]
    expected: FAIL

  [Valid 8-digit hex: #ffffffff]
    expected: FAIL

  [Should not parse invalid keyword:  /* hey */\n]
    expected: FAIL

  [Comma optional syntax requires no commas at all: hsl(0, 0% 0%)]
    expected: FAIL

  [Correct escape sequences should still parse: r\\67 b(00, 51, 102)]
    expected: FAIL

  [Valid percentages should be parsed: rgba(0%, 20%, 100%, 0.42)]
    expected: FAIL

  [Angles are represented as a part of a circle and wrap around: hsla(-300, 100%, 37.5%, 0.2)]
    expected: FAIL

  [Valid numbers should be parsed: rgba(0, 51, 255, 0.42)]
    expected: FAIL

  [The hsla function requires 3 or 4 arguments: hsla()]
    expected: FAIL

  [The hsla function requires 3 or 4 arguments: hsla(0, 0%)]
    expected: FAIL

  [Invalid alpha values should be clamped to 0 and 1 respectively: hsla(-300, 100%, 37.5%, -3)]
    expected: FAIL

  [The rgb function requires 3 or 4 arguments: rgb(0, 0)]
    expected: FAIL

  [Values must be all numbers or all percentages: rgb(10%, 50%, 0)]
    expected: FAIL

  [RGB and RGBA are synonyms: rgb(0, 0, 0, 0)]
    expected: FAIL

  [Should parse as correct value: cyan]
    expected: FAIL

  [Should not parse invalid hex: #fffff]
    expected: FAIL

  [Invalid alpha values should be clamped to 0 and 1 respectively: hsLA(-300, 100%, 37.5%, 12)]
    expected: FAIL

  [Angles are not accepted in the rgb function: rgb(0, 0, 0deg)]
    expected: FAIL

  [Comma optional syntax requires no commas at all: rgba(0, 0, 0 0)]
    expected: FAIL

  [Should not parse invalid hex: #fffffffff]
    expected: FAIL

  [Should not parse invalid hex: #fffffff]
    expected: FAIL

  [Capitalization should not affect parsing: rgB(0, 51, 255)]
    expected: FAIL

  [Capitalization should not affect parsing: RGB(100%, 100%, 100%)]
    expected: FAIL

  [Angles are represented as a part of a circle and wrap around: hsl(-300, 100%, 37.5%)]
    expected: FAIL

  [Lack of whitespace should not affect parsing: rgb(0,51,255)]
    expected: FAIL

  [Invalid alpha values should be clamped to 0 and 1 respectively: rgba(0, 51, 255, -139)]
    expected: FAIL

  [Whitespace should not affect parsing: rgb(10%\t,  20% ,30%)]
    expected: FAIL

  [Should be same as parent color: CURRENTcolor]
    expected: FAIL

  [Valid 3-digit hex: #369]
    expected: FAIL

  [The second and third parameters of hsl/hsla must be a percent: hsl(10, 50%, 0)]
    expected: FAIL

  [The rgba function requires 3 or 4 arguments: rgba(0%)]
    expected: FAIL

  [Should not parse invalid keyword: ]
    expected: FAIL

  [Should not parse invalid hex: #fffffffg]
    expected: FAIL

  [Keywords are not accepted in the rgb function: rgb(0, 0, light)]
    expected: FAIL

  [RGB and RGBA are synonyms: rgba(0%, 0%, 0%)]
    expected: FAIL

  [Capitalization should not affect parsing: RGBA(255, 255, 255, 0)]
    expected: FAIL

  [The rgb function requires 3 or 4 arguments: rgb()]
    expected: FAIL

  [Valid percentages should be parsed: rgb(42%, 3%, 50%)]
    expected: FAIL

  [Valid 6-digit hex: #ffffff]
    expected: FAIL

  [Correct escape sequences should still parse: r\\gb(00, 51, 102)]
    expected: FAIL

  [Should parse to completely transparent: transparent]
    expected: FAIL

  [Should not parse invalid keyword: 4]
    expected: FAIL

  [Valid 4-digit hex: #ffff]
    expected: FAIL

  [The rgb function requires 3 or 4 arguments: rgb(0%, 0%)]
    expected: FAIL

  [Should parse as correct value: white]
    expected: FAIL

  [Angles are accepted in HSL/HSLA: hsla(30deg, 100%, 100%, 1)]
    expected: FAIL

  [The rgba function requires 3 or 4 arguments: rgba(0%, 0%)]
    expected: FAIL

  [Invalid alpha values should be clamped to 0 and 1 respectively: rgba(0%, 20%, 100%, -139)]
    expected: FAIL

  [Percent alpha values are accepted in rgb/rgba: rgba(255, 255, 255, 0%)]
    expected: FAIL

  [Angles are represented as a part of a circle and wrap around: HSLA(-300, 100%, 37.5%, 1)]
    expected: FAIL

  [Angles are accepted in HSL/HSLA: hsl(30deg, 100%, 100%)]
    expected: FAIL

  [Should not parse invalid hex: #ff]
    expected: FAIL

  [Capitalization should not affect parsing: rgBA(0%, 20%, 100%, 1)]
    expected: FAIL

  [Valid numbers should be parsed: rgb(00, 51, 102)]
    expected: FAIL

  [The rgba function requires 3 or 4 arguments: rgba(0)]
    expected: FAIL

  [Invalid alpha values should be clamped to 0 and 1 respectively: rgba(0, 51, 255, 1.1)]
    expected: FAIL

  [The rgb function requires 3 or 4 arguments: rgb(0%)]
    expected: FAIL

  [Should parse to completely transparent: /**/transparent]
    expected: FAIL

  [Valid numbers should be parsed: rgba(0, 0, 0, 0)]
    expected: FAIL

  [Values must be all numbers or all percentages: rgba(10%, 50%, 0, 1)]
    expected: FAIL

  [Capitalization should not affect parsing: rgBA(0, 51, 255, 1)]
    expected: FAIL

  [Capitalization should not affect parsing: rgB(0%, 0%, 0%)]
    expected: FAIL

  [HSL and HSLA are synonyms: hsl(0, 0%, 0%, 0%)]
    expected: FAIL

  [Values must be all numbers or all percentages: rgba(255, 50%, 0%, 1)]
    expected: FAIL

  [Valid numbers should be parsed: hsl(300, 50%, 50%)]
    expected: FAIL

  [The second and third parameters of hsl/hsla must be a percent: hsla(10, 50%, 0, 1)]
    expected: FAIL

  [Keywords are not accepted in the hsla function: hsla(0, 0%, light, 1)]
    expected: FAIL

  [Should not parse invalid hex: #fffg]
    expected: FAIL

  [Keywords are not accepted in the rgb function: rgba(0, 0, 0, light)]
    expected: FAIL

  [The hsla function requires 3 or 4 arguments: hsla(0, 0%, 0%, 1, 0%)]
    expected: FAIL

  [Capitalization should not affect parsing: hsL(0, 100%, 50%)]
    expected: FAIL

  [Should parse to completely transparent:  transparent\n]
    expected: FAIL

  [The hsla function requires 3 or 4 arguments: hsla(0)]
    expected: FAIL

  [Comments should be allowed within function: rgb(/* R */0, /* G */51, /* B */255)]
    expected: FAIL

  [RGB and RGBA are synonyms: rgb(0%, 0%, 0%, 0)]
    expected: FAIL

  [Valid 6-digit hex: #FFCc99]
    expected: FAIL

  [Should not parse invalid hex: #ffg]
    expected: FAIL

  [Should be same as parent color: currentColor]
    expected: FAIL

  [Invalid values should be clamped to 0 and 255 respectively: rgb(-51, 306, 0)]
    expected: FAIL

  [The rgba function requires 3 or 4 arguments: rgba()]
    expected: FAIL

  [Invalid alpha values should be clamped to 0 and 1 respectively: rgba(0%, 20%, 100%, -0.1)]
    expected: FAIL

  [The hsl function requires 3 or 4 arguments: hsl(0, 0%)]
    expected: FAIL

  [Valid numbers should be parsed: rgba(204, 0, 102, 0.3)]
    expected: FAIL

  [Invalid alpha values should be clamped to 0 and 1 respectively: rgba(0, 51, 255, 37)]
    expected: FAIL

  [Should not parse invalid hex: #]
    expected: FAIL

  [RGB and RGBA are synonyms: rgba(0, 0, 0)]
    expected: FAIL

  [Angles are represented as a part of a circle and wrap around: hsl(780, 100%, 37.5%)]
    expected: FAIL

  [Whitespace should not affect parsing: rgb(10%,20%,30%)]
    expected: FAIL

  [Invalid alpha values should be clamped to 0 and 1 respectively: rgba(0%, 20%, 100%, 1.1)]
    expected: FAIL

  [Whitespace should not affect parsing: rgb(0\t,  51 ,255)]
    expected: FAIL

  [Should not parse invalid keyword: top]
    expected: FAIL

  [Valid percentages should be parsed: rgba(0%, 20%, 100%, 0)]
    expected: FAIL

  [The hsl function requires 3 or 4 arguments: hsl(0)]
    expected: FAIL

  [Capitalization should not affect parsing: rgB(0, 0, 0)]
    expected: FAIL

  [Angles are represented as a part of a circle and wrap around: hsla(-300, 100%, 37.5%, 0)]
    expected: FAIL

  [The rgba function requires 3 or 4 arguments: rgba(0%, 0%, 0%, 0%, 0%)]
    expected: FAIL

  [Should not parse invalid hex: #f]
    expected: FAIL

  [Should parse as cyan: CyAn]
    expected: FAIL

  [The rgba function requires 3 or 4 arguments: rgba(0, 0, 0, 0, 0)]
    expected: FAIL

  [Angles are not accepted in the rgb function: rgba(0, 0, 0, 0deg)]
    expected: FAIL

  [Should parse as correct value: black]
    expected: FAIL

